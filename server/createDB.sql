-- Delete the culinary_canvas database if it exists and recreate it
DROP DATABASE IF EXISTS culinary_canvas;
CREATE DATABASE culinary_canvas;

\c culinary_canvas

-- Create custom data types
CREATE TYPE recipe_time AS (hr INTEGER, min INTEGER);
CREATE TYPE units AS ENUM ('none', 'tsp', 'tbsp', 'cup', 'pinch', 'oz', 'ml', 'l', 'lbs', 'g', 'kg');
CREATE TYPE ingredient AS (item VARCHAR(255), quantity DECIMAL, unit units);
CREATE TYPE tag AS ENUM ('Breakfast', 'Brunch', 'Lunch', 'Dinner', 'Snack', 'Dessert', 'Appetizer', 'Side Dish', 
'Easy', 'Quick', 'One-Pot', 'No-Bake', 'Beginner-Friendly', 'Healthy', 'Low-Carb', 'Low-Calorie', 'High Protein', 
'High Fiber', 'Vegan', 'Vegetarian', 'Gluten-Free', 'Dairy-Free', 'Keto', 'Paleo', 'High-Fiber', 'Sugar-Free', 'Low-Fat'
'Baked', 'Grilled', 'Roasted', 'Fried', 'Slow Cooker', 'Instant Pot', 'Air Fryer', 'Steamed', 'Kid-Friendly', 'BBQ', 
'Comfort Food', 'Holiday', 'Italian', 'Mexican', 'Indian', 'Chinese', 'Japanese', 'Thai', 'Mediterranean', 'Middle Eastern', 
'American', 'French', 'Korean', 'Turkish', 'Spanish', 'Arab', 'Vietnamese', 'Greek', 'Hong Kong', 'Indonesian');
CREATE TYPE privacy_options AS ENUM ('public', 'private', 'custom');
CREATE TYPE custom_options AS (prof BOOLEAN, review BOOLEAN, fav BOOLEAN);
CREATE TYPE socials AS (facebook TEXT, youtube TEXT, tiktok TEXT, instagram TEXT);

-- Create the tables
CREATE TABLE users (
  uid INTEGER GENERATED BY DEFAULT AS IDENTITY,
  full_name VARCHAR(255) NOT NULL,
  email VARCHAR(255) PRIMARY KEY UNIQUE NOT NULL,
  salt CHAR(16) NOT NULL,
  password_hash TEXT NOT NULL,
  profile_img BYTEA DEFAULT NULL,
  social socials DEFAULT (NULL, NULL, NULL, NULL),
  location TEXT DEFAULT '',
  privacy privacy_options DEFAULT 'public',
  custom_privacy custom_options DEFAULT (true, true, true),
  show_email BOOLEAN DEFAULT false
);

CREATE TABLE recipes (
  recid INTEGER PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
  recipe_name TEXT NOT NULL,
  author VARCHAR(255) NOT NULL,
  about TEXT DEFAULT '',
  img BYTEA DEFAULT NULL,
  prep_time recipe_time DEFAULT (0, 0),
  cook_time recipe_time DEFAULT (0, 0),
  tags tag ARRAY DEFAULT '{}',
  notes TEXT DEFAULT '',
  servings INTEGER DEFAULT 0,
  ingrs ingredient ARRAY DEFAULT '{}',
  steps TEXT ARRAY DEFAULT '{}',
  CONSTRAINT fk_recipe_author FOREIGN KEY (author) REFERENCES users(email) ON DELETE CASCADE ON UPDATE CASCADE
);

CREATE TABLE fav_recipes (
  user_email VARCHAR(255) NOT NULL,
  recid INTEGER NOT NULL,
  PRIMARY KEY (user_email, recid),
  CONSTRAINT fk_fav_user FOREIGN KEY (user_email) REFERENCES users(email) ON DELETE CASCADE ON UPDATE CASCADE,
  CONSTRAINT fk_fav_recipe FOREIGN KEY (recid) REFERENCES recipes(recid) ON DELETE SET NULL
);

CREATE TABLE reviews (
  revid INTEGER PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
  author VARCHAR(255) NOT NULL,
  recipe INTEGER NOT NULL,
  created_at DATE DEFAULT CURRENT_DATE,
  comment TEXT DEFAULT '',
  rating INTEGER DEFAULT 0,
  helpful INTEGER DEFAULT 0,
  CONSTRAINT fk_review_author FOREIGN KEY (author) REFERENCES users(email) ON DELETE CASCADE ON UPDATE CASCADE,
  CONSTRAINT fk_review_recipe FOREIGN KEY (recipe) REFERENCES recipes(recid) ON DELETE SET NULL
);

-- Populate the tables
INSERT INTO users (full_name, email, salt, password_hash) VALUES
  ('John Smith', 'john@email.com', 'thisissalt', 'password123'), 
  ('Mary Sue', 'mary_sue@email.com', 'thisissalt', 'password123123'), 
  ('Larry Gary', 'notlarry@email.com', 'thisissalt', 'larrygary');
